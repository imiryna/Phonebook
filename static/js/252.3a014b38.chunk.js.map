{"version":3,"file":"static/js/252.3a014b38.chunk.js","mappings":"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","sources":["components/contactForm/contactForm.styled.jsx","components/contactForm/contactForm.jsx","components/contactList/contactList.styled.jsx","Redux/selectors.js","components/contactList/contactList.jsx","components/filter/filter.styled.jsx","components/filter/filter.jsx","components/loader/loader.styled.jsx","components/loader/loader.jsx","pages/contactsPage.jsx","pages/homePage.styled.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.h1`\n  margin-top: 40px;\n  margin-left: 40px;\n`;\n\nexport const TitleCss = styled.p`\n  color: rgba(5, 25, 55, 1);\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const ContactFormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  font-weight: 500;\n  background-color: #dfeff5;\n  border: 1px solid rgba(5, 25, 55, 1);\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  border-radius: 8px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n\nexport const Description = styled.label`\n  display: block;\n  margin-bottom: 8px;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: rgba(5, 25, 55, 1);\n  font-size: 20px;\n`;\n\nexport const InputFormCss = styled.input`\n  display: block;\n  width: 220px;\n  height: 40px;\n  padding: 12px;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n  border: 2px solid #dfeff5;\n  border-radius: 5px;\n\n  /* margin-top: 10px;\n  padding: 6px 10px;\n  border: none;\n  border: 2px solid #dfeff5;\n  border-radius: 5px;\n  font: inherit;\n  cursor: pointer; */\n\n  &:focus {\n    outline: none;\n    border: 2px solid #e88606;\n    background-color: #fff;\n  }\n`;\n\nexport const ButtonCss = styled.button`\n  padding: 8px 10px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  color: #fff;\n  font-size: 20px;\n  background: rgba(5, 25, 55, 1);\n  transition: all 250ms;\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(\n      90deg,\n      rgba(27, 163, 196, 1) 66%,\n      rgba(5, 25, 55, 1) 100%\n    );\n    color: #fff;\n    border: 1px solid #dcd5d5;\n    cursor: pointer;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.08),\n      0px 1px 1px rgba(46, 47, 66, 0.16), 0px 1px 6px rgba(46, 47, 66, 0.08);\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContactsThunk, getRequestContacts } from 'Redux/contactsThunk';\nimport {\n  ContactFormCss,\n  Description,\n  InputFormCss,\n  ButtonCss,\n} from 'components/contactForm/contactForm.styled';\n\nexport const ContactForm = () => {\n  const [userName, setUserName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getRequestContacts());\n  }, [dispatch]);\n\n  const handleInputContacts = e => {\n    switch (e.target.name) {\n      case 'userName':\n        setUserName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleAddContacts = ev => {\n    ev.preventDefault();\n    const newContact = {\n      name: userName,\n      number: number,\n    };\n    dispatch(addContactsThunk(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setUserName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactFormCss onSubmit={handleAddContacts}>\n      <p> Add Contact</p>\n      <Description>\n        Name\n        <InputFormCss\n          onChange={handleInputContacts}\n          type=\"text\"\n          name=\"userName\"\n          value={userName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Description>\n      <Description>\n        Number\n        <InputFormCss\n          onChange={handleInputContacts}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Description>\n      <ButtonCss type=\"submit\">Add contacts</ButtonCss>\n    </ContactFormCss>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListCss = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  padding: 12px;\n  border-radius: 8px;\n  background-color: #dfeff5;\n  border: 1px solid rgba(5, 25, 55, 1);\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  list-style: none;\n  margin-left: 44px;\n  margin-bottom: 20px;\n`;\n\nexport const Items = styled.li`\n  background-color: #fff;\n  border: 2px solid #dfeff5;\n  padding: 6px;\n  border-radius: 8px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const ButtonCss = styled.button`\n  padding: 8px 10px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 1px solid transparent;\n  color: #fff;\n  font-size: 20px;\n  background: rgba(5, 25, 55, 1);\n  transition: all 250ms;\n\n  &:hover,\n  &:focus {\n    background-image: linear-gradient(\n      90deg,\n      rgba(27, 163, 196, 1) 66%,\n      rgba(5, 25, 55, 1) 100%\n    );\n    color: #fff;\n    border: 1px solid #dcd5d5;\n    cursor: pointer;\n    box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.08),\n      0px 1px 1px rgba(46, 47, 66, 0.16), 0px 1px 6px rgba(46, 47, 66, 0.08);\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n","import React from 'react';\nimport {\n  ContactListCss,\n  Items,\n  ButtonCss,\n} from 'components/contactList/contactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'Redux/selectors';\nimport { deleteContactsThunk } from 'Redux/contactsThunk';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContactList = useSelector(selectFilteredContacts);\n\n  return (\n    <div>\n      <ContactListCss>\n        {filteredContactList?.map(({ id, name, number }) => (\n          <Items key={id}>\n            {name}: {number}\n            <ButtonCss\n              type=\"button\"\n              onClick={() => dispatch(deleteContactsThunk(id))}\n            >\n              Delete\n            </ButtonCss>\n          </Items>\n        ))}\n      </ContactListCss>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterCont = styled.div`\n  margin-bottom: 15px;\n\n  margin-top: 15px;\n  width: 600px;\n  column-gap: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  margin-left: 44px;\n  color: rgba(5, 25, 55, 1);\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 370px;\n  padding: 8px;\n  margin: 15px 0 10px;\n  border-radius: 5px;\n  border: none;\n  border: 3px solid #dfeff5;\n  font-size: 20px;\n\n  &:focus {\n    outline: none;\n    border: 3px solid #e88606;\n  }\n`;\n","import React from 'react';\nimport { FilterCont, Label, Input } from './filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'Redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <FilterCont>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" onChange={handleInputFilter} />\n      </Label>\n    </FilterCont>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;","import { Dna } from 'react-loader-spinner';\nimport { Loading } from './loader.styled';\n\nexport const Loader = () => {\n    \n  return (\n    <Loading>\n      <Dna\n        visible={true}\n        height=\"200\"\n        width=\"300\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </Loading>\n  );\n};","import React from 'react';\nimport { ContactForm } from 'components/contactForm/contactForm';\nimport { Text } from 'components/contactForm/contactForm.styled';\nimport { ContactList } from 'components/contactList/contactList';\nimport { Filter } from 'components/filter/filter';\nimport { Container } from 'pages/homePage.styled';\nimport { Loader } from 'components/loader/loader';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'Redux/selectors';\n\nexport const ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      <Container>\n        {error && <p>Whoops, something went wrong: {error}</p>}\n        <ContactForm />\n        <Text>Contacts</Text>\n        {contacts && contacts?.length > 0 && <Filter />}\n        {isLoading && <Loader />}\n        <ContactList />\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\nmargin-top: 40px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const Title = styled.h1`\n  display: block;\n  text-align: center;\n  color: #2a363b;\n  font-size: 20px;\n  font-weight: 500;\n  text-transform: uppercase;\n`;\nexport const Text = styled.p`\n  display: block;\n  font-size: 18px;\n  text-align: center;\n  text-transform: uppercase;\n  color: #e88606;\n`;"],"names":["Text","styled","_templateObject","_taggedTemplateLiteral","ContactFormCss","_templateObject2","_templateObject3","Description","_templateObject4","InputFormCss","_templateObject5","ButtonCss","_templateObject6","ContactForm","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useEffect","getRequestContacts","handleInputContacts","e","target","name","value","reset","_jsxs","onSubmit","ev","preventDefault","newContact","addContactsThunk","children","_jsx","onChange","type","pattern","title","required","ContactListCss","Items","selectContacts","state","contacts","items","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","filter","contact","toLowerCase","includes","ContactList","filteredContactList","useSelector","map","_ref","id","onClick","deleteContactsThunk","FilterCont","Label","Input","Filter","setFilter","Loading","Loader","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","ContactsPage","_Fragment","Container","length","Title"],"sourceRoot":""}