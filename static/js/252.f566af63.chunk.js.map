{"version":3,"file":"static/js/252.f566af63.chunk.js","mappings":"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","sources":["components/contactForm/contactForm.styled.jsx","components/contactForm/contactForm.jsx","components/contactList/contactList.styled.jsx","Redux/selectors.js","components/contactList/contactList.jsx","components/filter/filter.styled.jsx","components/filter/filter.jsx","components/loader/loader.styled.jsx","components/loader/loader.jsx","pages/contactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Text = styled.h1`\n  margin-top: 40px;\n  margin-left: 40px;\n`;\n\nexport const ContactFormCss = styled.form`\n  width: 320px;\n  padding: 24px;\n  margin: 40px;\n\n  outline: 1px solid #000;\n`;\nexport const Description = styled.label`\n  display: block;\n  margin-bottom: 8px;\n`;\nexport const InputFormCss = styled.input`\n  display: block;\n  width: 220px;\n  height: 40px;\n  padding: 12px;\n  box-sizing: border-box;\n  margin-bottom: 20px;\n`;\n\nexport const ButtonCss = styled.button`\n  display: block;\n  width: 100px;\n  border: none;\n  border-radius: 4px;\n  padding: 10px;\n  font-size: 12px;\n  background-color: rgb(186, 188, 188);\n  color: #000;\n\n  &:hover {\n    color: #fff;\n    background-color: rgb(93, 172, 180);\n    cursor: pointer;\n    border: 2px solid;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContactsThunk, getRequestContacts } from 'Redux/contactsThunk';\nimport {\n  ContactFormCss,\n  Description,\n  InputFormCss,\n  ButtonCss,\n} from 'components/contactForm/contactForm.styled';\n\nexport const ContactForm = () => {\n  const [userName, setUserName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getRequestContacts());\n  }, [dispatch]);\n\n\n  const handleInputContacts = e => {\n    switch (e.target.name) {\n      case 'userName':\n        setUserName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleAddContacts = ev => {\n    ev.preventDefault();\n    const newContact = {\n      name: userName,\n      phone: number,\n    };\n    dispatch(addContactsThunk(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setUserName('');\n    setNumber('');\n  };\n\n  return (\n    <ContactFormCss onSubmit={handleAddContacts}>\n      <Description>\n        Name\n        <InputFormCss\n          onChange={handleInputContacts}\n          type=\"text\"\n          name=\"userName\"\n          value={userName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Description>\n      <Description>\n        Number\n        <InputFormCss\n          onChange={handleInputContacts}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Description>\n      <ButtonCss type=\"submit\">Add contacts</ButtonCss>\n    </ContactFormCss>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactListCss = styled.ul`\n  width: 320px;\n  padding-left: 24px;\n  margin-left: 40px;\n`;\n\nexport const Items = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const ButtonCss = styled.button`\n  display: block;\n  width: 100px;\n  border: none;\n  border-radius: 4px;\n  padding: 10px;\n  font-size: 12px;\n  background-color: rgb(186, 188, 188);\n  color: #000;\n\n  &:hover {\n    color: #fff;\n    background-color: rgb(93, 172, 180);\n    cursor: pointer;\n    border: 2px solid;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter( // why it should be conditional\n        contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase()) ||\n          contact.phone.includes(filter)\n      );\n  }\n);","import React from 'react';\nimport {\n  ContactListCss,\n  Items,\n  ButtonCss,\n} from 'components/contactList/contactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'Redux/selectors';\nimport { deleteContactsThunk } from 'Redux/contactsThunk';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContactList = useSelector(selectFilteredContacts);\n\n  return (\n    <div>\n      <ContactListCss>\n        {filteredContactList?.map(({ id, name, phone }) => (\n          <Items key={id}>\n            {name}: {phone}\n            <ButtonCss\n              type=\"button\"\n              onClick={() => dispatch(deleteContactsThunk(id))}\n            >\n              Delete\n            </ButtonCss>\n          </Items>\n        ))}\n      </ContactListCss>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterCont = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  color: #000;\n  font-size: 20px;\n  margin-left: 15px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 370px;\n  padding: 8px;\n  margin: 25px;\n  border-radius: 5px;\n  border: none;\n  border: 3px solid #dfeff5;\n  font-size: 20px;\n\n  &:focus {\n    outline: none;\n    border: 3px solid #e88606;\n  }\n`;\n","import React from 'react';\nimport { FilterCont, Label, Input } from './filter.styled';\nimport { useDispatch} from 'react-redux';\nimport { setFilter } from 'Redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n \n\n  const handleInputFilter = e => {\n    dispatch(setFilter(e.target.value));\n};\n\n\n  return (\n    <FilterCont>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" onChange={handleInputFilter} />\n      </Label>\n    </FilterCont>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Loading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;","import { Dna } from 'react-loader-spinner';\nimport { Loading } from './loader.styled';\n\nexport const Loader = () => {\n    \n  return (\n    <Loading>\n      <Dna\n        visible={true}\n        height=\"200\"\n        width=\"300\"\n        ariaLabel=\"dna-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"dna-wrapper\"\n      />\n    </Loading>\n  );\n};","import React from 'react';\nimport { ContactForm } from 'components/contactForm/contactForm';\nimport { Text } from 'components/contactForm/contactForm.styled';\nimport { ContactList } from 'components/contactList/contactList';\nimport { Filter } from 'components/filter/filter';\nimport { Container, Title } from 'App/App.styled';\nimport { Loader } from 'components/loader/loader';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'Redux/selectors';\n\nconst ContactsPage = ()=>{\n     \n      const contacts = useSelector(selectContacts);\n      const isLoading = useSelector(selectIsLoading);\n      const error = useSelector(selectError);\n    \n      return (\n        <>\n          <Container>\n          \n            <Title>Phonebook</Title>\n            {error && <p>Whoops, something went wrong: {error}</p>}\n            <ContactForm />\n            <Text>Contacts</Text>\n            {contacts && contacts?.length > 0 && <Filter />} \n            {isLoading && <Loader />}\n            <ContactList />\n          </Container>\n        </>\n      );\n    \n    \n}\n\nexport default ContactsPage;"],"names":["Text","styled","_templateObject","_taggedTemplateLiteral","ContactFormCss","_templateObject2","Description","_templateObject3","InputFormCss","_templateObject4","ButtonCss","_templateObject5","ContactForm","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useEffect","getRequestContacts","handleInputContacts","e","target","name","value","reset","_jsxs","onSubmit","ev","preventDefault","newContact","phone","addContactsThunk","children","_jsx","onChange","type","pattern","title","required","ContactListCss","Items","selectContacts","state","contacts","items","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","filter","contact","toLowerCase","includes","ContactList","filteredContactList","useSelector","map","_ref","id","onClick","deleteContactsThunk","FilterCont","Label","Input","Filter","setFilter","Loading","Loader","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","_Fragment","Container","Title","length"],"sourceRoot":""}